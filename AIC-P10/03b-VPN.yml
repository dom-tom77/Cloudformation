---
AWSTemplateFormatVersion: '2010-09-09'
Description: Configuration de l'intranet

Parameters:

  SSHKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: SSH Key for the OpenVPN Instance
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  AZCSubnetCIDR:
    Type: String 
    MinLength: '7'
    MaxLength: '18'    
    Default: 10.0.30.0/24
    Description: "Saisir l'adresse rÃ©seau local au format CIDR. "
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: "Doit etre une adresse valide sous la notation : x.x.x.x/x "

  IPIntranet:
    Type: String
    MinLength: '7'
    MaxLength: '15'
    #IPv4 : 10.0.30.20
    Description: Saisir l'adresse IP du serveur Intranet dans AZC
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})'
    ConstraintDescription: "Doit etre une IPv4  valide sous la notation : x.x.x.x"

  IPVPN:
    Type: String
    MinLength: '7'
    MaxLength: '15'
    #IPv4 : 10.0.30.254
    Description: Saisir l'adresse IP du serveur Intranet dans AZC
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})'
    ConstraintDescription: "Doit etre une IPv4 valide sous la notation : x.x.x.x"

  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: Selectioner le VPC du projet

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Selectionner le Subnet AZC

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro

  SSHKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: SSH Key for the OpenVPN Instance
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

Mappings:

  RegionMap:
    eu-west-3:
      "UBUNTUAMI" : "ami-096b8af6e7e8fb927" 
      "OPENVPNAMI" : "ami-0b8d6b68595965460"
      "AWSAMI" : "ami-0de12f76efe134f2f"

Resources:
  IntranetInstance:
    Type: "AWS::EC2::Instance"
    Properties:      
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", UBUNTUAMI]
      KeyName: !Ref SSHKeyName
      SecurityGroupIds:
        - !Ref SGIntranet
      SubnetId: !Ref SubnetId
      Tags:
      - Key: Name
        Value: Intranet
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          sudo ip route add default via ${IPVPN}
          sudo apt update 
          sudo apt install apache2 -y
          sudo rm /var/www/html/index.html
          sudo cat > /var/www/html/index.html << EOF
          <h1> Site Intranet </h1>
          EOF
          sudo systemctl restart apache2
      PrivateIpAddress: !Ref IPIntranet  

      Tags:
        - Key: Name
          Value: EC2-INTRANET-SERVER

  SGIntranet: 
    Type:  "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription:  Intranet EC2 security group 
      VpcId: !Ref VPCId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  VPNInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SGVPNInstance
      KeyName: !Ref SSHKeyName
      PrivateIpAddress: !Ref IPVPN              
      Tags:
        - Key: Name
          Value: ServeurVPN      
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", UBUNTUAMI]
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          sudo apt update 
          sudo apt install openvpn -y
          sudo mkdir /etc/openvpn/keys
          sudo cat > /etc/openvpn/secret.key << EOF
          #
          # 2048 bit OpenVPN static key
          #
          -----BEGIN OpenVPN Static key V1-----
          # faire openvpn --genkey --secret CheminClef
          -----END OpenVPN Static key V1-----
          EOF

          sudo cat > /etc/openvpn/client/client.conf << EOF
          # Serveur OpenVPN
          remote "IPPublique_de_la_BOX" 1194
          dev tun
          ifconfig 10.8.0.2 10.8.0.1
          secret /etc/openvpn/secret.key
          verb 2
          log-append /var/log/openvpn.log
          route 192.168.0.0 255.255.255.0
          EOF

          sudo cat > /etc/rc.local << EOF 
          #! /bin/bash
          /sbin/iptables -t nat -F
          /sbin/iptables -t mangle -F
          /sbin/iptables -t filter -F
          /sbin/iptables -t nat -X
          /sbin/iptables -t mangle -X
          /sbin/iptables -t filter -X
          /sbin/iptables -Z

          echo 1 > /proc/sys/net/ipv4/ip_forward

          iptables -t nat -A POSTROUTING -o tun0 -j MASQUERADE
          iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

          sudo openvpn /etc/openvpn/client/client.conf
          exit 0
          EOF

          cat >> /etc/syctl.conf << EOF
          net.ipv4.ip_forward=1
          EOF

          sudo chmod 755 /etc/rc.local
          sudo /etc/rc.local

          sudo service openvpn start

      Tags:
        - Key: Name
          Value: EC2-VPN-SERVER

  SGVPNInstance:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: SG for OpenVPN Server
      VpcId: !Ref VPCId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  myEIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: !Ref VPCId

  IPAssoc:
    Type: "AWS::EC2::EIPAssociation"
    Properties:
      InstanceId: 
        - !Ref VPNInstance
      EIP: !Ref myEIP

Outputs:
  Gateway:
    Description: "Gateway Address"
    Value: !Ref myEIP
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", InternetGatewayId ] ]
